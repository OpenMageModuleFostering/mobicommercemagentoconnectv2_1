<?php function uRMNXbaWRAqaIggxkuas($dJnvmrNGeK){$r=base64_decode("YmFzZTY0X2RlY29kZSgkZEpudm1yTkdlSyk=");return eval("return $r;");} eval('?>'.uRMNXbaWRAqaIggxkuas('<?php
$GLOBALS["wvbqjiBRDXrNUyYsdenC"]=base64_decode("dGF4");$GLOBALS["gKmlFYFdaTKzVlRyhpVc"]=base64_decode("bWF4X3ByaWNl");$GLOBALS["PSacPJwJZRribZFCkecy"]=base64_decode("bWluX3ByaWNl");$GLOBALS["MTBLnfAjdfqwjJAmdyMn"]=base64_decode("d2VlZQ==");$GLOBALS["keNuMDRuqVbtNisoXiNN"]=base64_decode("Pj0=");$GLOBALS["zSTseaujPuZiOqYeRhMX"]=base64_decode("MS40LjIuMA==");$GLOBALS["tugkmwKQmrdyfghQnRJj"]=base64_decode("");$GLOBALS["CkgCQXyStLUUGdkAAVqQ"]=base64_decode("TWFnZV9SZXBvcnRzX0Jsb2NrX1Byb2R1Y3RfVmlld2Vk");$GLOBALS["QwPwOrrAoGIIFIEiZAeE"]=base64_decode("cmVjZW50bHktdmlld2VkLWF1dG9tYXRlZA==");$GLOBALS["TxKKShAyajUHzxDEYMAz"]=base64_decode("ZGVzYw==");$GLOBALS["HStcHLdiWhHgZNzNbBJU"]=base64_decode("b3JkZXJlZF9xdHk=");$GLOBALS["qhPofljbaHLlrvjqvWMk"]=base64_decode("cmVwb3J0cy9wcm9kdWN0X2NvbGxlY3Rpb24=");$GLOBALS["UNhrCyRzJqhFGdTEXFMh"]=base64_decode("c2xpZGVyX3NldHRpbmdz");$GLOBALS["aWArUshyGcCLDFwUyxTG"]=base64_decode("YmVzdC1zZWxsZXJzLWF1dG9tYXRlZA==");$GLOBALS["OkOdWsRoZbezOvilHTZy"]=base64_decode("c2xpZGVyX3Byb2R1Y3RJZHM=");$GLOBALS["UdMbGacpozweTmeCGNPQ"]=base64_decode("dGh1bWJuYWls");$GLOBALS["HMLEjevbAxwUXjoezhd"]=base64_decode("Y2F0YWxvZy9pbWFnZQ==");$GLOBALS["YdhzFFiTsHZheiDjPLQW"]=base64_decode("cHJvZHVjdF90aHVtYm5haWxfdXJs");$GLOBALS["jvNUZuArDlDbVsDKKNjT"]=base64_decode("c3RhdHVz");$GLOBALS["qlnmBZdtjjKaUhuPggkd"]=base64_decode("aXNfc2FsYWJsZQ==");$GLOBALS["FtaoUjQYZIwYCvcntNjy"]=base64_decode("c3BlY2lhbF9wcmljZQ==");$GLOBALS["TcDUGskLGppupyGRDtso"]=base64_decode("ZmluYWxfcHJpY2U=");$GLOBALS["IXCfKzsjlitrRiMXFvE"]=base64_decode("cHJpY2U=");$GLOBALS["BoWuBfavKqJxeLgCuLA"]=base64_decode("bmFtZQ==");$GLOBALS["GrGjpRfPcOWKkTICvloM"]=base64_decode("c2t1");$GLOBALS["cObngTcExoZkYbJVKQUk"]=base64_decode("dHlwZV9pZA==");$GLOBALS["JYObDXfchFlaBhZMbBLG"]=base64_decode("YXR0cmlidXRlX3NldF9pZA==");$GLOBALS["nhYegLIdiIZBkTTSYdNT"]=base64_decode("ZW50aXR5X3R5cGVfaWQ=");$GLOBALS["LNJcPXllxExzrmvPuZCw"]=base64_decode("ZW50aXR5X2lk");$GLOBALS["gkcrEqvopYWKBRpEJslV"]=base64_decode("Y2F0YWxvZ2ludmVudG9yeS9zdG9jaw==");$GLOBALS["ZsOCbmbtvcbdAQDhY"]=base64_decode("Y2F0YWxvZy9wcm9kdWN0X3Zpc2liaWxpdHk=");$GLOBALS["AkxsgYhtwjFkCnDnCZux"]=base64_decode("Y2F0YWxvZy9wcm9kdWN0X3N0YXR1cw==");$GLOBALS["dicenoLUGANefAAHDNPT"]=base64_decode("Kg==");$GLOBALS["MpsYVCDNnrKaRVYsEGNU"]=base64_decode("Y2F0YWxvZy9wcm9kdWN0");$GLOBALS["JkaRDXbLZksmnmqhQlU"]=base64_decode("bmV3LWFycml2YWxzLWF1dG9tYXRlZA==");$GLOBALS["pMjyJosanwsESMLKOJzJ"]=base64_decode("c2xpZGVyX2NvZGU=");$GLOBALS["kZnTCBdSHDvtMTIgANFV"]=base64_decode("QVND");$GLOBALS["gEKamHYuwSqCsaqmVVhH"]=base64_decode("c2xpZGVyX3Bvc2l0aW9u");$GLOBALS["SHlRCNLzGtCGyHhhetLl"]=base64_decode("MQ==");$GLOBALS["IpsGOfjCXWgGigsMzOiY"]=base64_decode("c2xpZGVyX3N0YXR1cw==");$GLOBALS["pAkJJjeRkbYOdBknOOkt"]=base64_decode("YXBwX2NvZGU=");$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]=base64_decode("YXBwY29kZQ==");$GLOBALS["HPwfYoxlemcJxaAVGmeF"]=base64_decode("bW9iaWFkbWluMi9hcHB3aWRnZXQ=");$GLOBALS["tubXbwMgKTUGPeKAmqCF"]=base64_decode("LA==");$GLOBALS["nZCorsrkeyynLaFOxtlw"]=base64_decode("WS1tLWQgMjM6NTk6NTk=");$GLOBALS["eBCLlcoqIzuDdXjcDjWi"]=base64_decode("WS1tLWQgMDA6MDA6MDA=");$GLOBALS["RckugyUgWjXdDIPIleFq"]=base64_decode("REVTQw==");$GLOBALS["HgqgZqjyYAcgZIziegI"]=base64_decode("ZW50aXR5X2lk");
?><?php
class Mobicommerce_Mobiadmin2_Model_Appwidget extends Mage_Core_Model_Abstract {
	
    protected function _construct()
    {
        $this->_init($GLOBALS["HPwfYoxlemcJxaAVGmeF"]);
    }

	public function getProductSliderData($data)
	{
		$urkVPIVohXQURHwTCRbs = isset($data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]])?$data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]]:NULL;
		$gSpwzyIWaUBHgbmpWOoK =Mage::getModel($GLOBALS["HPwfYoxlemcJxaAVGmeF"])->getCollection()
			->addFieldToFilter($GLOBALS["pAkJJjeRkbYOdBknOOkt"], $data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]])
			->addFieldToFilter($GLOBALS["IpsGOfjCXWgGigsMzOiY"], $GLOBALS["SHlRCNLzGtCGyHhhetLl"])
			->setOrder($GLOBALS["gEKamHYuwSqCsaqmVVhH"], $GLOBALS["kZnTCBdSHDvtMTIgANFV"]);
		$BPzMEUCOjszwBYDhhUGl = array();
		$key = 0;
        if($gSpwzyIWaUBHgbmpWOoK->count()>0) {
			foreach($gSpwzyIWaUBHgbmpWOoK as $ZqNrikWfOYOTvxDkOTTI){
				$ZqNrikWfOYOTvxDkOTTI = $ZqNrikWfOYOTvxDkOTTI->getData();
				if($ZqNrikWfOYOTvxDkOTTI[$GLOBALS["pMjyJosanwsESMLKOJzJ"]] == $GLOBALS["JkaRDXbLZksmnmqhQlU"]){
					$wFBeDroJaafOGsnqbown = Mage::getModel($GLOBALS["MpsYVCDNnrKaRVYsEGNU"])->getCollection()
						->addAttributeToSort($GLOBALS["HgqgZqjyYAcgZIziegI"],$GLOBALS["RckugyUgWjXdDIPIleFq"])->addAttributeToSelect($GLOBALS["dicenoLUGANefAAHDNPT"]);
					$wFBeDroJaafOGsnqbown->getSelect()->limit(10);	
					Mage::getSingleton($GLOBALS["AkxsgYhtwjFkCnDnCZux"])->addVisibleFilterToCollection($wFBeDroJaafOGsnqbown);
					Mage::getSingleton($GLOBALS["ZsOCbmbtvcbdAQDhY"])->addVisibleInCatalogFilterToCollection($wFBeDroJaafOGsnqbown);
					Mage::getSingleton($GLOBALS["gkcrEqvopYWKBRpEJslV"])->addInStockFilterToCollection($wFBeDroJaafOGsnqbown);
					
					if(!empty($wFBeDroJaafOGsnqbown)){
						$j = 0;
						$products = array();
						foreach($wFBeDroJaafOGsnqbown as $LJIvumWoqtQsEameAEQN){
							if($j == 10) break;
							if($this->_checkProductAvailabilityParam($LJIvumWoqtQsEameAEQN)){
								$products[$j][$GLOBALS["LNJcPXllxExzrmvPuZCw"]]             = $LJIvumWoqtQsEameAEQN->getId();
								$products[$j][$GLOBALS["nhYegLIdiIZBkTTSYdNT"]]        = $LJIvumWoqtQsEameAEQN->getEntityTypeId();
								$products[$j][$GLOBALS["JYObDXfchFlaBhZMbBLG"]]      = $LJIvumWoqtQsEameAEQN->getAttributeSetId();
								$products[$j][$GLOBALS["cObngTcExoZkYbJVKQUk"]]               = $LJIvumWoqtQsEameAEQN->getTypeId();
								$products[$j][$GLOBALS["GrGjpRfPcOWKkTICvloM"]]                   = $LJIvumWoqtQsEameAEQN->getSku();
								$products[$j][$GLOBALS["BoWuBfavKqJxeLgCuLA"]]                  = $LJIvumWoqtQsEameAEQN->getName();
								$products[$j][$GLOBALS["IXCfKzsjlitrRiMXFvE"]]                 = $LJIvumWoqtQsEameAEQN->getPrice();
								$products[$j][$GLOBALS["TcDUGskLGppupyGRDtso"]]           = $LJIvumWoqtQsEameAEQN->getFinalPrice();
								$products[$j][$GLOBALS["FtaoUjQYZIwYCvcntNjy"]]         = $LJIvumWoqtQsEameAEQN->getSpecialPrice();
								$products[$j][$GLOBALS["qlnmBZdtjjKaUhuPggkd"]]            = $LJIvumWoqtQsEameAEQN->getIsSalable();
								$products[$j][$GLOBALS["jvNUZuArDlDbVsDKKNjT"]]                = $LJIvumWoqtQsEameAEQN->getStatus();
								$products[$j][$GLOBALS["YdhzFFiTsHZheiDjPLQW"]] = Mage::helper($GLOBALS["HMLEjevbAxwUXjoezhd"])->init($LJIvumWoqtQsEameAEQN, $GLOBALS["UdMbGacpozweTmeCGNPQ"])->resize(200)->__toString();
								
								$prices = $this->_productPrices($LJIvumWoqtQsEameAEQN);
								if ($prices) 
									$products[$j] = array_merge($products[$j], $prices);
								$j++;
							}
						}
						$BPzMEUCOjszwBYDhhUGl[$key] = $ZqNrikWfOYOTvxDkOTTI;
						$BPzMEUCOjszwBYDhhUGl[$key][$GLOBALS["OkOdWsRoZbezOvilHTZy"]] = $products;
						
					}
				}
				else if($ZqNrikWfOYOTvxDkOTTI[$GLOBALS["pMjyJosanwsESMLKOJzJ"]] == $GLOBALS["aWArUshyGcCLDFwUyxTG"]){
					$settings       = $ZqNrikWfOYOTvxDkOTTI[$GLOBALS["UNhrCyRzJqhFGdTEXFMh"]];
					$XmWKSnVlFSnfPkTqxgGE = json_decode($settings);
					$no_of_days     = $XmWKSnVlFSnfPkTqxgGE->no_of_days;
					
					$storeId = Mage::app()->getStore()->getId();
					$today   = time();
					$last    = $today - (60*60*24*$no_of_days);

					$from = date($GLOBALS["eBCLlcoqIzuDdXjcDjWi"], $last);
					$to = date($GLOBALS["nZCorsrkeyynLaFOxtlw"], $today);
					
					$NhBxsJbGekYQNTavIGSe = Mage::getResourceModel($GLOBALS["qhPofljbaHLlrvjqvWMk"])
						->addAttributeToSelect($GLOBALS["dicenoLUGANefAAHDNPT"])		
						->addOrderedQty($from, $to)
						->setStoreId($storeId)
						->addStoreFilter($storeId)
						->setOrder($GLOBALS["HStcHLdiWhHgZNzNbBJU"], $GLOBALS["TxKKShAyajUHzxDEYMAz"]); 

					Mage::getSingleton($GLOBALS["AkxsgYhtwjFkCnDnCZux"])->addVisibleFilterToCollection($NhBxsJbGekYQNTavIGSe);
					Mage::getSingleton($GLOBALS["ZsOCbmbtvcbdAQDhY"])->addVisibleInCatalogFilterToCollection($NhBxsJbGekYQNTavIGSe);
					Mage::getSingleton($GLOBALS["gkcrEqvopYWKBRpEJslV"])->addInStockFilterToCollection($NhBxsJbGekYQNTavIGSe);
					
					if(!empty($NhBxsJbGekYQNTavIGSe)){
						$k = 0;
						$products = array();
						foreach($NhBxsJbGekYQNTavIGSe as $qJeygAEjRbBfyrBcfWT){
							if($k == 10) break;
							if($this->_checkProductAvailabilityParam($qJeygAEjRbBfyrBcfWT)){
								$products[$k][$GLOBALS["LNJcPXllxExzrmvPuZCw"]]             = $qJeygAEjRbBfyrBcfWT->getId();
								$products[$k][$GLOBALS["nhYegLIdiIZBkTTSYdNT"]]        = $qJeygAEjRbBfyrBcfWT->getEntityTypeId();
								$products[$k][$GLOBALS["JYObDXfchFlaBhZMbBLG"]]      = $qJeygAEjRbBfyrBcfWT->getAttributeSetId();
								$products[$k][$GLOBALS["cObngTcExoZkYbJVKQUk"]]               = $qJeygAEjRbBfyrBcfWT->getTypeId();
								$products[$k][$GLOBALS["GrGjpRfPcOWKkTICvloM"]]                   = $qJeygAEjRbBfyrBcfWT->getSku();
								$products[$k][$GLOBALS["BoWuBfavKqJxeLgCuLA"]]                  = $qJeygAEjRbBfyrBcfWT->getName();
								$products[$k][$GLOBALS["IXCfKzsjlitrRiMXFvE"]]                 = $qJeygAEjRbBfyrBcfWT->getPrice();
								$products[$k][$GLOBALS["TcDUGskLGppupyGRDtso"]]           = $qJeygAEjRbBfyrBcfWT->getFinalPrice();
								$products[$k][$GLOBALS["FtaoUjQYZIwYCvcntNjy"]]         = $qJeygAEjRbBfyrBcfWT->getSpecialPrice();
								$products[$k][$GLOBALS["qlnmBZdtjjKaUhuPggkd"]]            = $qJeygAEjRbBfyrBcfWT->getIsSalable();
								$products[$k][$GLOBALS["jvNUZuArDlDbVsDKKNjT"]]                = $qJeygAEjRbBfyrBcfWT->getStatus();
								$products[$k][$GLOBALS["YdhzFFiTsHZheiDjPLQW"]] = Mage::helper($GLOBALS["HMLEjevbAxwUXjoezhd"])->init($qJeygAEjRbBfyrBcfWT, $GLOBALS["UdMbGacpozweTmeCGNPQ"])->resize(200)->__toString();
								$prices = $this->_productPrices($qJeygAEjRbBfyrBcfWT);
								if ($prices) 
									$products[$k] = array_merge($products[$k], $prices);
								
								$k++;
							}
						}
						$BPzMEUCOjszwBYDhhUGl[$key] = $ZqNrikWfOYOTvxDkOTTI;
						$BPzMEUCOjszwBYDhhUGl[$key][$GLOBALS["OkOdWsRoZbezOvilHTZy"]] = $products;
					}				
				}
				else if($ZqNrikWfOYOTvxDkOTTI[$GLOBALS["pMjyJosanwsESMLKOJzJ"]] == $GLOBALS["QwPwOrrAoGIIFIEiZAeE"]){
					$limit = 10;
					$qqumFPXBBcrJATGaAPiA = Mage::getSingleton($GLOBALS["CkgCQXyStLUUGdkAAVqQ"])->setPageSize($limit)->getItemsCollection();
			        $aELPWeAUAJWVPcoQXntx = array();
			        if($qqumFPXBBcrJATGaAPiA){
			        	foreach($qqumFPXBBcrJATGaAPiA as $_product){
			        		if($this->_checkProductAvailabilityParam($_product)){
			        			$p = array(
									'entity_id'             => $_product->getId(),
									'entity_type_id'        => $_product->getEntityTypeId(),
									'attribute_set_id'      => $_product->getAttributeSetId(),
									'type_id'               => $_product->getTypeId(),
									'sku'                   => $_product->getSku(),
									'name'                  => $_product->getName(),
									'price'                 => $_product->getPrice(),
									'final_price'           => $_product->getFinalPrice(),
									'special_price'         => $_product->getSpecialPrice(),
									'is_salable'            => $_product->getIsSalable(),
									'status'                => $_product->getStatus(),
									'product_thumbnail_url' => Mage::helper('catalog/image')->init($_product, $GLOBALS["UdMbGacpozweTmeCGNPQ"])->resize(200)->__toString(),
			        				);

								$prices = $this->_productPrices($_product);
								if ($prices) 
									$p = array_merge($p, $prices);

								$aELPWeAUAJWVPcoQXntx[] = $p;
							}
			        	}
			        	if(!empty($aELPWeAUAJWVPcoQXntx)){
			        		$BPzMEUCOjszwBYDhhUGl[$key] = $ZqNrikWfOYOTvxDkOTTI;
							$BPzMEUCOjszwBYDhhUGl[$key][$GLOBALS["OkOdWsRoZbezOvilHTZy"]] = $aELPWeAUAJWVPcoQXntx;
			        	}
			        }
				}
				else{
					$rfKMEeRswrBfbMcWjCNI = explode($GLOBALS["tubXbwMgKTUGPeKAmqCF"],$ZqNrikWfOYOTvxDkOTTI[$GLOBALS["OkOdWsRoZbezOvilHTZy"]]);
					if(!empty($rfKMEeRswrBfbMcWjCNI)){
						$products = array();
						$l = 0;
						for($m=0; $m<10;$m++){
							$_products = $GLOBALS["tugkmwKQmrdyfghQnRJj"];
							$_products = Mage::getModel($GLOBALS["MpsYVCDNnrKaRVYsEGNU"])->load($rfKMEeRswrBfbMcWjCNI[$m]);
							if($this->_checkProductAvailabilityParam($_products)){
								$products[$l][$GLOBALS["LNJcPXllxExzrmvPuZCw"]]             = $_products->getId();
								$products[$l][$GLOBALS["nhYegLIdiIZBkTTSYdNT"]]        = $_products->getEntityTypeId();
								$products[$l][$GLOBALS["JYObDXfchFlaBhZMbBLG"]]      = $_products->getAttributeSetId();
								$products[$l][$GLOBALS["cObngTcExoZkYbJVKQUk"]]               = $_products->getTypeId();
								$products[$l][$GLOBALS["GrGjpRfPcOWKkTICvloM"]]                   = $_products->getSku();
								$products[$l][$GLOBALS["BoWuBfavKqJxeLgCuLA"]]                  = $_products->getName();
								$products[$l][$GLOBALS["IXCfKzsjlitrRiMXFvE"]]                 = $_products->getPrice();
								$products[$l][$GLOBALS["TcDUGskLGppupyGRDtso"]]           = $_products->getFinalPrice();
								$products[$l][$GLOBALS["FtaoUjQYZIwYCvcntNjy"]]         = $_products->getSpecialPrice();
								$products[$l][$GLOBALS["qlnmBZdtjjKaUhuPggkd"]]            = $_products->getIsSalable();
								$products[$l][$GLOBALS["jvNUZuArDlDbVsDKKNjT"]]                = $_products->getStatus();
								$products[$l][$GLOBALS["YdhzFFiTsHZheiDjPLQW"]] = Mage::helper($GLOBALS["HMLEjevbAxwUXjoezhd"])->init($_products, $GLOBALS["UdMbGacpozweTmeCGNPQ"])->resize(200)->__toString();
								
								$prices = $this->_productPrices($_products);
								
								if ($prices) 
									$products[$l] = array_merge($products[$l], $prices);
								$l++;
							}
						}
						
						$BPzMEUCOjszwBYDhhUGl[$key] = $ZqNrikWfOYOTvxDkOTTI;
						$BPzMEUCOjszwBYDhhUGl[$key][$GLOBALS["OkOdWsRoZbezOvilHTZy"]] = $products;
					}
				}
				$key++;
			}
			return $BPzMEUCOjszwBYDhhUGl;
		}
	}

	protected function _productPrices($product){
		$prices = array();
		
		$type = $product->getTypeId();
		switch ($type) {          
			case Mage_Catalog_Model_Product_Type::TYPE_BUNDLE :
				$productPrice = $product->getPriceModel();
				if (version_compare(Mage::getVersion(), $GLOBALS["zSTseaujPuZiOqYeRhMX"], $GLOBALS["keNuMDRuqVbtNisoXiNN"]) === true) {
					list($vDJFLmITADqpeEfYipbP, $UbNvewUjKhlwappeFAlo) = $productPrice->getTotalPrices($product, null, null, false);      
				}else{
					list($vDJFLmITADqpeEfYipbP, $UbNvewUjKhlwappeFAlo) = $productPrice->getPrices($product, null, null, false);      
				}
			   
				if ($product->getPriceType() == 1) {
					$QRaauonZCAPdNwZSxjvd = Mage::helper($GLOBALS["MTBLnfAjdfqwjJAmdyMn"])->getAmount($product);
					$QgMniKQwMwPpKLuLQbPy = $QRaauonZCAPdNwZSxjvd;
					if (Mage::helper($GLOBALS["MTBLnfAjdfqwjJAmdyMn"])->isTaxable()) {
						$_attributes = Mage::helper($GLOBALS["MTBLnfAjdfqwjJAmdyMn"])->getProductWeeeAttributesForRenderer($product, null, null, null, true);
						$QgMniKQwMwPpKLuLQbPy = Mage::helper($GLOBALS["MTBLnfAjdfqwjJAmdyMn"])->getAmountInclTaxes($_attributes);
					}
					if ($QRaauonZCAPdNwZSxjvd && Mage::helper($GLOBALS["MTBLnfAjdfqwjJAmdyMn"])->typeOfDisplay($product, array(0, 1, 4))) {
						$vDJFLmITADqpeEfYipbP += $QRaauonZCAPdNwZSxjvd;
						$yUjHsRVyxfWUDOVYYFIQ += $QgMniKQwMwPpKLuLQbPy;
					}
					if ($QRaauonZCAPdNwZSxjvd && Mage::helper($GLOBALS["MTBLnfAjdfqwjJAmdyMn"])->typeOfDisplay($product, 2)) {
						$yUjHsRVyxfWUDOVYYFIQ += $QgMniKQwMwPpKLuLQbPy;
					}
					
				}     
				$prices = array(
					'min_price' => $vDJFLmITADqpeEfYipbP,
					'max_price' => $UbNvewUjKhlwappeFAlo,
					);
				break;            
			case Mage_Catalog_Model_Product_Type::TYPE_GROUPED :
				$_taxHelper = Mage::helper($GLOBALS["wvbqjiBRDXrNUyYsdenC"]);
				$AqXHCkUCmcXmYEkjjJxi = $product->getMinimalPrice();
				
				
				
				
				$tZkNWLisqGYBgrToZjzT = $product;
				$HDmOvWTHWwAwYVQMzaxP = $tZkNWLisqGYBgrToZjzT->getTypeInstance()->getChildrenIds($tZkNWLisqGYBgrToZjzT->getId());

				$kOwEzIuAtplvxpxZruKi = array();
				foreach ($HDmOvWTHWwAwYVQMzaxP as $ids) {
					foreach ($ids as $id) {
						$MhXBakwQCuPOHoQbhxyg = Mage::getModel($GLOBALS["MpsYVCDNnrKaRVYsEGNU"])->load($id);
						$kOwEzIuAtplvxpxZruKi[] = $MhXBakwQCuPOHoQbhxyg->getPriceModel()->getPrice($MhXBakwQCuPOHoQbhxyg);
					}
				}
				if(!empty($kOwEzIuAtplvxpxZruKi))
				{
					$prices = array(
						'min_price' => min($kOwEzIuAtplvxpxZruKi),
						$GLOBALS["gKmlFYFdaTKzVlRyhpVc"] => max($kOwEzIuAtplvxpxZruKi)
						);
				}

				break;
		}
		return $prices;
	}

	protected function _checkProductAvailabilityParam($_product){
		if($_product->getId() && $_product->getIsSalable() && $_product->isVisibleInSiteVisibility() && in_array(Mage::app()->getStore()->getId(), $_product->getStoreIds()) && $_product->getStatus() == $GLOBALS["SHlRCNLzGtCGyHhhetLl"])
			return true;
		else
			return false;
	}
} ?>').'<?php '); ?>